// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  name      String
  email     String  @unique
  role      String  @default("user")
  avatar    String?
  tasks     Task[]  @relation("AssignedTasks")
}

model Client {
  id        String        @id @default(uuid())
  name      String
  email     String
  phone     String?
  company   String?
  address   String?
  city      String?
  zipCode   String?
  country   String?
  notes     String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  contacts  Contact[]
  opportunities Opportunity[]
  tasks     Task[]
}

model Contact {
  id        String   @id @default(uuid())
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  name      String
  email     String
  phone     String?
  position  String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Opportunity {
  id        String   @id @default(uuid())
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  name      String
  value     Float
  status    String   @default("new")
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
}

model Task {
  id            String      @id @default(uuid())
  title         String
  description   String?
  status        String      @default("pending")
  dueDate       DateTime?
  assigneeId    String?
  assignee      User?       @relation("AssignedTasks", fields: [assigneeId], references: [id], onDelete: SetNull)
  clientId      String?
  client        Client?     @relation(fields: [clientId], references: [id], onDelete: SetNull)
  opportunityId String?
  opportunity   Opportunity? @relation(fields: [opportunityId], references: [id], onDelete: SetNull)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
